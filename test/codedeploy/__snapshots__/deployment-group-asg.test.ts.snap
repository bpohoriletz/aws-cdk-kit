// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CodeDeploy .createDeploymentGroupToAsg() matches snapshot 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs20.x",
      },
      "cn-northwest-1": {
        "value": "nodejs20.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs20.x",
      },
      "us-gov-west-1": {
        "value": "nodejs20.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "9d043014be736e8162bcc7ec5590cc6d2ff24fd0d9c73a5c5d595151c5fdad00.zip",
        },
        "FunctionName": "Stub-any",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceProfileIDE79A37AF": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceProfileIDInstanceRole9444F891",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "InstanceProfileIDInstanceRole9444F891": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "InstanceProfileIDInstanceRoleDefaultPolicy2535B464": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::aws-codedeploy-",
                      {
                        "Ref": "AWS::Region",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::aws-codedeploy-",
                      {
                        "Ref": "AWS::Region",
                      },
                      "/latest/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "InstanceProfileIDInstanceRoleDefaultPolicy2535B464",
        "Roles": [
          {
            "Ref": "InstanceProfileIDInstanceRole9444F891",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PreFixLtA4FCEB40": {
      "DependsOn": [
        "InstanceProfileIDInstanceRoleDefaultPolicy2535B464",
        "InstanceProfileIDInstanceRole9444F891",
      ],
      "Properties": {
        "LaunchTemplateData": {
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "InstanceProfileIDE79A37AF",
                "Arn",
              ],
            },
          },
          "ImageId": {
            "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter",
          },
          "InstanceType": "Default/Stub-any",
          "NetworkInterfaces": [
            {
              "AssociatePublicIpAddress": false,
              "DeviceIndex": 0,
              "Groups": [
                {
                  "Fn::GetAtt": [
                    "WebSecurityGroup73AF7387",
                    "GroupId",
                  ],
                },
              ],
            },
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Default/PreFixLt",
                },
              ],
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "Default/PreFixLt",
                },
              ],
            },
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash
echo Hello World
set +e
PKG_CMD=\`which yum 2>/dev/null\`
set -e
if [ -z "$PKG_CMD" ]; then
PKG_CMD=apt-get
else
PKG_CMD=yum
fi
$PKG_CMD update -y
set +e
$PKG_CMD install -y ruby2.0
RUBY2_INSTALL=$?
set -e
if [ $RUBY2_INSTALL -ne 0 ]; then
$PKG_CMD install -y ruby
fi
AWS_CLI_PACKAGE_NAME=awscli
if [ "$PKG_CMD" = "yum" ]; then
AWS_CLI_PACKAGE_NAME=aws-cli
fi
$PKG_CMD install -y $AWS_CLI_PACKAGE_NAME
TMP_DIR=\`mktemp -d\`
cd $TMP_DIR
aws s3 cp s3://aws-codedeploy-",
                  {
                    "Ref": "AWS::Region",
                  },
                  "/latest/install . --region ",
                  {
                    "Ref": "AWS::Region",
                  },
                  "
chmod +x ./install
./install auto
rm -fr $TMP_DIR",
                ],
              ],
            },
          },
        },
        "LaunchTemplateName": "PreFixLt",
        "TagSpecifications": [
          {
            "ResourceType": "launch-template",
            "Tags": [
              {
                "Key": "Name",
                "Value": "Default/PreFixLt",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "RoleID477B5CA1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSCodeDeployRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ServerApplicationID0A7B7E9A": {
      "Properties": {
        "ApplicationName": "cd.ServerApplication",
        "ComputePlatform": "Server",
      },
      "Type": "AWS::CodeDeploy::Application",
    },
    "Stubany48AD4C66": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StubanyCustomResourcePolicyCA030679",
      ],
      "Properties": {
        "Create": "{"service":"sts","action":"GetCallerIdentity","physicalResourceId":{"id":"CustomID"}}",
        "InstallLatestAwsSdk": true,
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "StubanyCustomResourcePolicyCA030679": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sts:GetCallerIdentity",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StubanyCustomResourcePolicyCA030679",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "VpcID703024FC": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/VpcID",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIDIGW70D85C75": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/VpcID",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcIDIsolatedSubnet1RouteTableAssociationC2ECBCF5": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIDIsolatedSubnet1RouteTableCF9B88CE",
        },
        "SubnetId": {
          "Ref": "VpcIDIsolatedSubnet1SubnetFCDAB651",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcIDIsolatedSubnet1RouteTableCF9B88CE": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/VpcID/IsolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcIDIsolatedSubnet1SubnetFCDAB651": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "Default/VpcID/IsolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcIDIsolatedSubnet2RouteTable9A3A82EF": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/VpcID/IsolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcIDIsolatedSubnet2RouteTableAssociation88968DE6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIDIsolatedSubnet2RouteTable9A3A82EF",
        },
        "SubnetId": {
          "Ref": "VpcIDIsolatedSubnet2Subnet52CFD445",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcIDIsolatedSubnet2Subnet52CFD445": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "Default/VpcID/IsolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcIDPrivateSubnet1DefaultRouteD7C53805": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcIDPublicSubnet1NATGateway3C86780D",
        },
        "RouteTableId": {
          "Ref": "VpcIDPrivateSubnet1RouteTableFC20DF64",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIDPrivateSubnet1RouteTableAssociation43036593": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIDPrivateSubnet1RouteTableFC20DF64",
        },
        "SubnetId": {
          "Ref": "VpcIDPrivateSubnet1SubnetE31736A9",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcIDPrivateSubnet1RouteTableFC20DF64": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/VpcID/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcIDPrivateSubnet1SubnetE31736A9": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/VpcID/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcIDPrivateSubnet2DefaultRoute21C5563B": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcIDPublicSubnet2NATGatewayF1C39B22",
        },
        "RouteTableId": {
          "Ref": "VpcIDPrivateSubnet2RouteTable9348734A",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIDPrivateSubnet2RouteTable9348734A": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/VpcID/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcIDPrivateSubnet2RouteTableAssociationD9C8D78D": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIDPrivateSubnet2RouteTable9348734A",
        },
        "SubnetId": {
          "Ref": "VpcIDPrivateSubnet2SubnetC6B60E3F",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcIDPrivateSubnet2SubnetC6B60E3F": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Default/VpcID/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcIDPublicSubnet1DefaultRoute73EE5304": {
      "DependsOn": [
        "VpcIDVPCGWE6968D99",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIDIGW70D85C75",
        },
        "RouteTableId": {
          "Ref": "VpcIDPublicSubnet1RouteTableA9496B93",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIDPublicSubnet1EIP66CFB463": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/VpcID/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcIDPublicSubnet1NATGateway3C86780D": {
      "DependsOn": [
        "VpcIDPublicSubnet1DefaultRoute73EE5304",
        "VpcIDPublicSubnet1RouteTableAssociation2D570C68",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcIDPublicSubnet1EIP66CFB463",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcIDPublicSubnet1Subnet49ECF0B5",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/VpcID/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcIDPublicSubnet1RouteTableA9496B93": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/VpcID/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcIDPublicSubnet1RouteTableAssociation2D570C68": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIDPublicSubnet1RouteTableA9496B93",
        },
        "SubnetId": {
          "Ref": "VpcIDPublicSubnet1Subnet49ECF0B5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcIDPublicSubnet1Subnet49ECF0B5": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/VpcID/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcIDPublicSubnet2DefaultRoute16A93887": {
      "DependsOn": [
        "VpcIDVPCGWE6968D99",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIDIGW70D85C75",
        },
        "RouteTableId": {
          "Ref": "VpcIDPublicSubnet2RouteTable7E67B44D",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcIDPublicSubnet2EIPF974E61A": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/VpcID/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcIDPublicSubnet2NATGatewayF1C39B22": {
      "DependsOn": [
        "VpcIDPublicSubnet2DefaultRoute16A93887",
        "VpcIDPublicSubnet2RouteTableAssociation5A90573C",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcIDPublicSubnet2EIPF974E61A",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcIDPublicSubnet2SubnetBF551D4B",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/VpcID/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcIDPublicSubnet2RouteTable7E67B44D": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Default/VpcID/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcIDPublicSubnet2RouteTableAssociation5A90573C": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcIDPublicSubnet2RouteTable7E67B44D",
        },
        "SubnetId": {
          "Ref": "VpcIDPublicSubnet2SubnetBF551D4B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcIDPublicSubnet2SubnetBF551D4B": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Default/VpcID/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcIDVPCGWE6968D99": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIDIGW70D85C75",
        },
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "WebSecurityGroup73AF7387": {
      "Properties": {
        "GroupDescription": "Web security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow incoming traffic over port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow incoming traffic over port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "VpcID703024FC",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "prefixasgASGD04A8C02": {
      "Properties": {
        "AutoScalingGroupName": "pre-fix-asg",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": 300,
        "HealthCheckType": "EC2",
        "MaxSize": "1",
        "MinSize": "1",
        "MixedInstancesPolicy": {
          "InstancesDistribution": {
            "OnDemandBaseCapacity": 0,
            "OnDemandPercentageAboveBaseCapacity": 0,
          },
          "LaunchTemplate": {
            "LaunchTemplateSpecification": {
              "LaunchTemplateId": {
                "Ref": "PreFixLtA4FCEB40",
              },
              "Version": {
                "Fn::GetAtt": [
                  "PreFixLtA4FCEB40",
                  "LatestVersionNumber",
                ],
              },
            },
            "Overrides": [
              {
                "InstanceType": "Default/Stub-any",
              },
            ],
          },
        },
        "VPCZoneIdentifier": [
          {
            "Ref": "VpcIDPrivateSubnet1SubnetE31736A9",
          },
          {
            "Ref": "VpcIDPrivateSubnet2SubnetC6B60E3F",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "prefixasgLifecycleHookPreFixAsgLnchHookA91E7C12": {
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "prefixasgASGD04A8C02",
        },
        "DefaultResult": "CONTINUE",
        "HeartbeatTimeout": 60,
        "LifecycleTransition": "autoscaling:EC2_INSTANCE_LAUNCHING",
      },
      "Type": "AWS::AutoScaling::LifecycleHook",
    },
    "prefixasgLifecycleHookPreFixAsgTermHookB084B920": {
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "prefixasgASGD04A8C02",
        },
        "DefaultResult": "CONTINUE",
        "HeartbeatTimeout": 60,
        "LifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
      },
      "Type": "AWS::AutoScaling::LifecycleHook",
    },
    "prefixdg66D052C2": {
      "Properties": {
        "ApplicationName": {
          "Ref": "ServerApplicationID0A7B7E9A",
        },
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE",
          ],
        },
        "AutoScalingGroups": [
          {
            "Ref": "prefixasgASGD04A8C02",
          },
        ],
        "DeploymentConfigName": "CodeDeployDefault.AllAtOnce",
        "DeploymentGroupName": "pre-fix-dg",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "RoleID477B5CA1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CodeDeploy::DeploymentGroup",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
